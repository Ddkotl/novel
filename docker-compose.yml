services:
  db:
    container_name: ${POSTGRES_CONTAINER}
    image: postgres:15.2
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - ${POSTGRES_PORT}:5432
    volumes:
      - postgres_data_novell:/var/lib/postgresql/data
    networks:
      - backend_novell
  minio:
    container_name: ${MINIO_CONTAINER}
    image: minio/minio
    restart: always
    ports:
      - ${MINIO_PORT}:9000
      - ${MINIO_ADMIN_PORT}:9001
    command: minio server --console-address ":9001" /data
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - minio_data_novell:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - backend_novell
  createbuckets:
    container_name: minio-bucket
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      /usr/bin/mc alias set myminio http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD};
      /usr/bin/mc mb myminio/${S3_IMAGES_BUCKET};
      /usr/bin/mc anonymous set public myminio/${S3_IMAGES_BUCKET};
      exit 0;
      "
    networks:
      - backend_novell

  tor:
    image: dperson/torproxy
    container_name: tor_proxy
    restart: unless-stopped
    ports:
      - "127.0.0.1:${TOR_PROXY_PORT}:9050"
    environment:
      - TZ=UTC
    networks:
      - backend_novell

volumes:
  postgres_data_novell:
  minio_data_novell:

networks:
  backend_novell:
